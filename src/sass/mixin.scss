@mixin clearfix {
  &::after, 
  &::before {
  content:'';
  display:table;
  clear:both;
  }
}

@mixin left {
  float: left;
}

@mixin right {
  float: right;
}

@mixin list {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin box-sizing( $bz: border-box) {
  box-sizing: $bz;
}

@mixin invisible-text {
  font-size: 0;
  line-height: 0;
  text-shadow: none;
  color: transparent;
}
  
@mixin tablet {
  @media only screen and (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: #{$tablet-width}) {
    @content;
  }
}

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		src: $src;
    font-style: $style;
		font-weight: $weight;
	}
}